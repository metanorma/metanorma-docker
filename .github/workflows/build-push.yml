name: build-push

on:
  push:
    branches: [ main ]
    tags:
    - '*'
  pull_request:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.platforms == 'linux/arm64' }} # remove after https://github.com/metanorma/emf2svg-ruby/issues/9
    strategy:
      fail-fast: false
      matrix:
        include:
        - dockerfile: Dockerfile.ruby
          root: ruby
          image: mn
          publish: true
          platforms: linux/amd64
        - dockerfile: Dockerfile.ruby
          root: ruby
          image: mn
          publish: true
          platforms: linux/arm64

        - dockerfile: Dockerfile.ruby
          root: ruby
          image: metanorma
          publish: true
          platforms: linux/amd64
        - dockerfile: Dockerfile.ruby
          root: ruby
          image: metanorma
          publish: true
          platforms: linux/arm64

        - dockerfile: Dockerfile.ubuntu
          root: ubuntu
          image: mn-ubuntu
          publish: true
          platforms: linux/amd64
        - dockerfile: Dockerfile.ubuntu
          root: ubuntu
          image: mn-ubuntu
          publish: true
          platforms: linux/arm64

        - dockerfile: Dockerfile.ubuntu
          root: ubuntu
          image: metanorma-ubuntu
          publish: true
          platforms: linux/amd64
        - dockerfile: Dockerfile.ubuntu
          root: ubuntu
          image: metanorma-ubuntu
          publish: true
          platforms: linux/arm64
    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'

    - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@main
      with:
        token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
        local: true

    - uses: docker/setup-qemu-action@v1

    - uses: docker/setup-buildx-action@v1

    - id: tag
      env:
        IS_TAG_PUSHED: startsWith(github.ref, 'refs/tags/v')
        IS_PULL_REQUEST: github.event_name == 'pull_request'
      run: |
        if [ "$IS_PULL_REQUEST" == "true" ]; then
          echo "::set-output name=result::${GITHUB_REF_NAME}"
        elif [ "$IS_TAG_PUSHED" == "true" ]; then
          echo "::set-output name=result::${GITHUB_REF#*/v}\nlatest"
        else
          echo "::set-output name=result::latest"
        fi

    - id: image
      uses: actions/github-script@v4
      with:
        result-encoding: string
        script: return 'metanorma/${{ matrix.image }}'.toLowerCase()

    - id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ steps.image.outputs.result }}
        tags: |
          ${{ steps.tag.outputs.result }}
        labels: |
          metanorma-container-root=${{ matrix.root }}
          metanorma-container-source=https://github.com/metanorma/metanorma-docker
          metanorma-container-remote=${{ steps.image.outputs.result }}:${{ steps.tag.outputs.result }}
          metanorma-container-version=${{ steps.tag.outputs.result }}
          metanorma-container-commit=${{ github.sha }}
          metanorma-container-commit-branch=${{ github.ref_name }}

    - uses: docker/build-push-action@v2
      with:
        context: .
        platforms: ${{ matrix.platforms }}
        load: true
        push: false
        file: ${{ matrix.dockerfile }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ribose-local/${{ matrix.image }}:${{ steps.tag.outputs.result }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          METANORMA_IMAGE_NAME=${{ matrix.image }}
        secret-files: |
          bundle_config=.bundle/config

    - uses: yuichielectric/dive-action@0.0.4
      with:
        image: ${{ steps.image.outputs.result }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Run tests
      env:
        GITHUB_CREDENTIALS: "metanorma-ci:${{ secrets.METANORMA_CI_PAT_TOKEN }}"
      run: |
        make test-${{ matrix.image }}

    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
        password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}

    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: metanorma-ci
        password: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

    - if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: ${{ matrix.platforms }}
        push: ${{ matrix.publish }}
        file: ${{ matrix.dockerfile }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ghcr.io/${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          METANORMA_IMAGE_NAME=${{ matrix.image }}
        secret-files: |
          bundle_config=.bundle/config

    - name: Trigger samples repositories
      if: startsWith(github.ref, 'refs/tags/v') && matrix.image == 'mn'
      env:
        GH_USERNAME: metanorma-ci
        GH_ACCESS_TOKEN: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
      run: |
        curl -LO --retry 3 https://raw.githubusercontent.com/metanorma/metanorma-build-scripts/main/trigger-gh-actions.sh
        for repo in iso cc gb iec itu ogc un iho nist
        do
          sh trigger-gh-actions.sh $ORGANISATION mn-samples-$repo $GH_USERNAME $GH_ACCESS_TOKEN $GITHUB_REPOSITORY
        done
