name: build-push-windows

on:
  push:
    branches: [ main ]
    tags:
    - '*'
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_LOGIN_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_LOGIN_PASSWORD }}
  IMAGE_NAME: "docker.io/metanorma/metanorma-windows"

jobs:
  build-windows-images:
    strategy:
      matrix:
        root_image:
         - os: windows-2025
           # Can be obtained using `docker manifest inspect mcr.microsoft.com/windows/servercore:ltsc2025`
           os_version: "10.0.26100.3194"
           base_id: ltsc2025
           base_image: "mcr.microsoft.com/windows/servercore:ltsc2025"
         - os: windows-2022
           os_version: "10.0.20348.3207"
           base_id: ltsc2022
           base_image: "mcr.microsoft.com/windows/servercore:ltsc2022"
         - os: windows-2019
           os_version: "10.0.17763.6893"
           base_id: ltsc2019
           # Windows Server 2019 with .NET Framework 4.8 required for Chocolatey
           base_image: "mcr.microsoft.com/dotnet/framework/runtime:4.8"
    runs-on: ${{ matrix.root_image.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build --pull --no-cache -t ${{ env.IMAGE_NAME }}:${{ matrix.root_image.base_id }} -f Dockerfile.windows --build-arg BASE_IMAGE=${{ matrix.root_image.base_image }} .
        shell: pwsh

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ matrix.root_image.base_id }}
        shell: pwsh

  create-manifest:
    needs: build-windows-images
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}

      - name: Create and Push Docker Manifest
        run: |
          MANIFEST_TAG=${{ env.IMAGE_NAME }}:latest
          
          docker manifest create $MANIFEST_TAG \
            ${{ env.IMAGE_NAME }}:ltsc2019 \
            ${{ env.IMAGE_NAME }}:ltsc2022 \
            ${{ env.IMAGE_NAME }}:ltsc2025

          docker manifest annotate $MANIFEST_TAG \
            ${{ env.IMAGE_NAME }}:ltsc2019 \
            --os windows --arch amd64 --os-version "10.0.17763.6893"

          docker manifest annotate $MANIFEST_TAG \
            ${{ env.IMAGE_NAME }}:ltsc2022 \
            --os windows --arch amd64 --os-version "10.0.20348.3207"

          docker manifest annotate $MANIFEST_TAG \
            ${{ env.IMAGE_NAME }}:ltsc2025 \
            --os windows --arch amd64 --os-version "10.0.26100.3194"

          docker manifest push $MANIFEST_TAG
